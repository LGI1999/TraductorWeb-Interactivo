@using TraductorWeb.Models.CustomModels;  

@{/*Solicitamos un objeto del modelo Listado para poder enviar los datos que se actualizaran*/} 
@model Listado

@{/*Creamos un variable que tendra la pagina mostrada que se almacena en el atributo Pagina del modelo. Esto se hace*/ 
  /*ya que al usar al atributo asp-for en varias etiquetas al mismo tiempo no establece su atributo value.*/}
@{int paginaMostrada = Model.Pagina;}

<partial name="~/Views/Listado/FiltroBusqueda.cshtml" />

<input id="cantidadPaginasGeneral" type="hidden" value="@ViewBag.cantidadPaginas" /><!--Servira para verificar que a la hora de elegir una pagina en el filtro no sea mayor a la cantidad de paginas-->

<div class="tablaListado">
    <table id="tablaListado" class="table table-hover letraChica">
        <thead>
            <tr>
                <th>Traducido</th>
                <th>Presente</th>
                <th>Traduccion Nº1</th>
                <th>Traduccion Nº2</th>
                <th>Traduccion Nº3</th>
                <th>Traduccion Nº4</th>
                <th>Traduccion Nº5</th>
                <th>Traduccion Nº6</th>
                <th>Traduccion Nº7</th>
                <th>Traduccion Nº8</th>
                <th>Traduccion Nº9</th>
                <th>Traduccion Nº10</th>
                <th hidden="true">IdPalabraIngles</th><!--Columna en donde se guardara el ID de la palabra en ingles (ID de la tabla PalabrasIngles)-->
                <th hidden="true">IdSignificados</th><!--Columna en donde se guardara el ID de los significados de la palabra en ingles (ID de la tabla Significados)-->
            </tr>
        </thead>
        <tbody id="bodyListado">
            @{int contador = 0;/*Contador para ver cuantas filas se cargan*/}
            @{string filaId = "fila" + contador;/*Servira para cargar el ID de cada fila concatenado esta variable con la variable contador*/}
            @{string nombreMetodo = "seleccionFila" + contador;/*Servira para cargar el nombre del metodo que le corresponde a cada evento click de cada fila*/}
            <!--Cargamos todas las palabras pertenecientes a la primera pagina-->
            @foreach (Listado palabra in ViewBag.datosPalabras)
            {
                <tr id=@filaId class="" v-on:click="@nombreMetodo">
                    @{contador += 1;}
                    @{filaId = "fila" + contador;}
                    @{nombreMetodo = "seleccionFila" + contador;}
                    <td>@palabra.PalabraIngles</td>
                    <td>@palabra.PalabraInglesPresente</td>
                    <td>@palabra.SignificadoEspañol_1</td>
                    <td>@palabra.SignificadoEspañol_2</td>
                    <td>@palabra.SignificadoEspañol_3</td>
                    <td>@palabra.SignificadoEspañol_4</td>
                    <td>@palabra.SignificadoEspañol_5</td>
                    <td>@palabra.SignificadoEspañol_6</td>
                    <td>@palabra.SignificadoEspañol_7</td>
                    <td>@palabra.SignificadoEspañol_8</td>
                    <td>@palabra.SignificadoEspañol_9</td>
                    <td>@palabra.SignificadoEspañol_10</td>
                    <td hidden="true">@palabra.IdPalabraIngles</td>
                    <td hidden="true">@palabra.IdSignificados</td>
                </tr>
            }
        </tbody>
    </table>
</div>
    @{ /*Evaluamos si hay alguna pagina mostrada. Para permitir desplazarse de pagina y mostrar los datos de las paginas(paginas mostrada y cantidad de paginas)*/}
    @if (paginaMostrada != 0)
    {
        <div id="cuadroPaginas" class="border estiloCuadroPaginas">
            <span id="paginaMostradaCuadro">@paginaMostrada</span><span>/</span><span>@ViewBag.cantidadPaginas</span>
        </div>


        <div class="btn-group botonesDesplazamientoPagina">
            <!--form para poder enviar los datos del modelo al controlador y pueda cambiar de pagina-->
            <form id="formularioDesplazamientoPagina" asp-action="Index" asp-controller="Listado">
                <input id="numeroPagina" type="hidden" asp-for="Pagina" />

                <!--Obtenemos la cantidad de paginas mediante la variable ViewBag.cantidadPaginas-->
                <input id="cantidadPaginas" asp-for="Pagina" type="hidden" value="@ViewBag.cantidadPaginas" />

                <button type="button" id="btnPrimeraPagina" v-on:click="irPrimeraPagina" class="btn btn-dark">@("<<")</button>
                <button type="button" id="btnAnterior" v-on:click="restarPagina" class="btn btn-dark">Anterior</button>
                <button type="button" id="btnSiguiente" v-on:click="sumarPagina" class="btn btn-dark">Siguiente</button>
                <button type="button" id="btnUltimaPagina" v-on:click="irUltimaPagina" class="btn btn-dark">@(">>")</button>
            </form>
        </div>
    }


    <div class="btn-group botonesAdministracion">
        <!--form para agregar una nueva palabra-->
        <form asp-action="Administracion" asp-controller="Listado" method="post">
            <button type="submit" class="btn btn-primary">Agregar</button>
        </form>

        <!--form para actualizar una palabra-->
        <form asp-action="Administracion" asp-controller="Listado" method="post">
            <!--inputs que seran cargados con los datos de las filas seleccionadas para luego ser enviadas por medios del formulario-->
            <input id="IdPalabraIngles" type="hidden" asp-for="IdPalabraIngles" />
            <input class="IdSignificados" type="hidden" asp-for="IdSignificados" /><!--Tiene la clase IdSignificados ya que a todos los elementos de esa clase se le asignara el ID de los significados-->
            <input id="PalabraIngles" type="hidden" asp-for="PalabraIngles" />
            <input id="PalabraInglesPresente" type="hidden" asp-for="PalabraInglesPresente" />
            <input id="SignificadoEspañol_1" type="hidden" asp-for="SignificadoEspañol_1" />
            <input id="SignificadoEspañol_2" type="hidden" asp-for="SignificadoEspañol_2" />
            <input id="SignificadoEspañol_3" type="hidden" asp-for="SignificadoEspañol_3" />
            <input id="SignificadoEspañol_4" type="hidden" asp-for="SignificadoEspañol_4" />
            <input id="SignificadoEspañol_5" type="hidden" asp-for="SignificadoEspañol_5" />
            <input id="SignificadoEspañol_6" type="hidden" asp-for="SignificadoEspañol_6" />
            <input id="SignificadoEspañol_7" type="hidden" asp-for="SignificadoEspañol_7" />
            <input id="SignificadoEspañol_8" type="hidden" asp-for="SignificadoEspañol_8" />
            <input id="SignificadoEspañol_9" type="hidden" asp-for="SignificadoEspañol_9" />
            <input id="SignificadoEspañol_10" type="hidden" asp-for="SignificadoEspañol_10" />
            <input id="PaginaMostrada" asp-for="Pagina" type="hidden" value="@paginaMostrada" /><!--input con la pagina mostrada (cargado cuando se carga el input '#numeroPagina'), esto para permitirle volver a la misma pagina cuando termine de actualizar-->

            <button id="btnActualizar" disabled="true" type="submit" class="btn btn-success">Actualizar</button>
        </form>

        <!--form para borrar un registro-->
        <form id="formBorrado" asp-action="Borrar" asp-controller="Listado" method="post">
            <!--input con el ID de los significados a borrar (No es necesario el ID de la palabra en ingles ya que se borra por un trigger en la base de datos)-->
            <input class="IdSignificados" type="hidden" asp-for="IdSignificados" />

            <!--input con la pagina mostrada (cargado cuando se carga el input '#numeroPagina'), esto para permitirle volver a la misma pagina cuando termine de borrar-->
            <input id="PaginaMostradaBorrado" asp-for="Pagina" type="hidden" value="@paginaMostrada" />

            <button id="btnBorrar" disabled="true" type="button" v-on:click="verificarBorrado" class="btn btn-danger">Borrar</button>
        </form>
    </div>



